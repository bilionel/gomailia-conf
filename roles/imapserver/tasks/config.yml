---

- name: enable imap pop3 imaps pop3s protocols in dovecot
  lineinfile:
    backup: yes
    path: '{{ dovecot_main_config_file }}'
    regexp: '^protocols ='
    insertafter: '!include_try /usr/share/dovecot/protocols.d'
    line: protocols = {{ enabled_protocols }}
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: create mail directory for dovecot
  file:
    path: '{{ mail_directory }}'
    group: '{{ dovecot_user }}'
    owner: '{{ dovecot_user }}'
    state: directory
  tags:
    - dovecot_config

- name: specify mailbox directory in dovecot
  lineinfile:
    backup: yes
    path: '{{ dovecot_mailbox_namespace_config_file }}'
    regexp: '^mail_location = '
    line: mail_location = maildir:{{ mail_directory }}/%d/%n/{{ mail_directoryname }}
  notify:
    - restart dovecot service
  tags:
    - dovecot_config
  
- name: specify mail privileged group in dovecot
  lineinfile:
    backup: yes
    path: '{{ dovecot_mailbox_namespace_config_file }}'
    regexp: '^mail_privileged_group = '
    line: mail_privileged_group = {{ vmail_system_user }}
  notify:
    - restart dovecot service
  tags:
    - dovecot_config


- name: add dovecot user to mail group
  user:
    name: '{{dovecot_user}}'
    groups: 
      - '{{ mail_system_group }}'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: add auth user format in dovecot auth conf file
  lineinfile:
    backup: yes
    regexp: 'auth_username_format = %u' 
    insertafter: '^#auth_username_format ='
    line: 'auth_username_format = %u'
    path: '{{ dovecot_auth_config_file}}'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: add PLAIN auth mecanism in dovecot auth conf file
  lineinfile:
    backup: yes
    regexp: '^auth_mechanisms ='
    line: 'auth_mechanisms = plain login'
    path: '{{ dovecot_auth_config_file}}'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: enable dovecot to query user info on MySQL/MariaDB
  lineinfile:
    backup: yes
    path: '{{ dovecot_auth_config_file }}'
    regexp: '!include auth-sql.conf.ext' 
    insertafter: '^#!include auth-sql.conf.ext'
    line: '!include auth-sql.conf.ext'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: disable dovecot to query local linux user database
  lineinfile:
    backup: yes
    path: '{{ dovecot_auth_config_file }}'
    regexp: '^!include auth-system.conf.ext'
    line: '#!include auth-system.conf.ext'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: add configuration to debug login issues
  lineinfile:
    backup: yes
    path: '{{ dovecot_auth_config_file }}'
    line: '{{ item }}'
  with_items:
      - 'auth_debug = yes'
      - 'auth_debug_passwords = yes'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config
  
- name: Get dovecot system user '{{ dovecot_user }}' info
  getent:
    database: passwd
    key: '{{ dovecot_user }}'
  tags:
    - dovecot_config

- name: add MySQL/MariaDB database configuration to dovecot service
  blockinfile:
    backup: yes
    path: '{{ dovecot_sql_conf_file }}'
    block: '{{ dovecot_sql_target_conf }}'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: copy dovecot master template configuration file
  template:
    src: '{{ dovecot_master_config_file_name }}.j2'
    dest: '{{ dovecot_config_folder }}/{{ dovecot_master_config_file_name }}'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: copy dovecot submission template configuration file
  template:
    src: '{{ dovecot_submission_config_file_name }}.j2'
    dest: '{{ dovecot_config_folder }}/{{ dovecot_submission_config_file_name }}'
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: change first valid uid for dovecot
  lineinfile:
    path: '{{ dovecot_mailbox_namespace_config_file }}'
    regexp: '^first_valid_uid ='
    line: 'first_valid_uid = {{ dovecot_first_valid_uid }}'
    backup: yes
  notify:
    - restart dovecot service
  tags:
    - dovecot_config

- name: Check if apache service is present on system
  stat: 
    path: '{{lib_services_folder}}/{{ apache_service_name }}'
  register: service_status
  tags:
    - ssl

- name: stop apache service
  service:
    name: '{{ apache_service_name }}'
    state: stopped
  when: service_status.stat.exists
  notify:
    - restart apache service
  tags:
    - ssl

- name: generate certificate for dovecot services
  shell:
    cmd: > 
      certbot
      certonly
      --standalone
      --non-interactive
      --agree-tos
      -m {{ support_email }}
      -d {{ site_imap_domain }}
  args:
    chdir: '{{ cert_folder_path }}/{{ private_cert_folder_name }}'
  tags:
    - ssl

- name: configure dovecot to use ssl certificate
  lineinfile:
    path: '{{ dovecot_ssl_conf_file }}'
    regexp: '{{ item.from }}'
    line: '{{item.to}}'
  with_items: '{{ dovecot_ssl_target_config }}'
  notify:
    - restart dovecot service
  tags:
    - ssl