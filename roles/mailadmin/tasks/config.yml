---  
  

- name: put www-data as owner of /var/www folder for apache2
  file:
    path: /var/www
    recurse: yes
    group: '{{ apache2_system_user }}'
    owner: '{{ apache2_system_user }}'
  notify:
    - restart apache2 service
  tags:
    - apache2

- name: configure default parameters for ldap DIT
  ansible.builtin.debconf:
    name: '{{ item.name }}'
    question: '{{ item.question }}'
    value: '{{ item.value }}'
    vtype: '{{ item.vtype }}'
  with_items:
    - {name: 'slapd' , question: 'slapd/no_configuration', value: '{{ ldap_no_configuration }}', vtype: boolean }
    - {name: 'slapd' , question: 'slapd/domain', value: '{{ ldap_full_domain }}', vtype: string }
    - {name: 'slapd' , question: 'shared/organization', value: '{{ ldap_organization }}', vtype: string }
    - {name: 'slapd' , question: 'slapd/purge_database', value: '{{ ldap_purge_database }}', vtype: boolean }
    - {name: 'slapd' , question: 'slapd/move_old_database', value: '{{ ldap_move_old_database }}', vtype: boolean }
  tags:
    - openldap

- name: configure passwords for ldap admin
  ansible.builtin.debconf:
    name: '{{ item.name }}'
    question: '{{ item.question }}'
    value: '{{ item.value }}'
    vtype: '{{ item.vtype }}'
  with_items:
    - {name: 'slapd' , question: 'slapd/internal/adminpw', value: '{{ ldap_admin_password }}', vtype: password }
    - {name: 'slapd' , question: 'slapd/password1', value: '{{ ldap_admin_password }}', vtype: password }
    - {name: 'slapd' , question: 'slapd/password2', value: '{{ ldap_admin_password }}', vtype: password }
  no_log: true
  tags:
    - openldap

- name: reconfigure slapd package
  ansible.builtin.shell: 
    cmd: dpkg-reconfigure slapd -fnoninteractive
  tags:
    - init_ldap__db

- name: copy schemas of vmailbox to ldap server
  copy:
    remote_src: yes
    src: '{{ vmailpanel_schema_folder }}'
    dest: '{{ ldap_schema_folder }}'
  tags:
   - openldap

- name: add schemas to openldapd
  ansible.builtin.shell: 
    cmd: ldapadd -Y EXTERNAL -H ldapi:/// -f {{ item }}
  with_items: '{{ schemas_to_load }}'
  tags:
    - openldap

- name: create hash password for vmail directory account
  expect:
    command: slappasswd -h {MD5}
    responses:
      (?i)New password: '{{ vmail_account_password }}'
      (?i)enter new password: '{{ vmail_account_password }}'
  no_log: true
  tags:
    - openladap
  register: vmail_account_hash_password

- name: print variable
  debug:
    var: vmail_account_hash_password
  tags:
    - openldap

- name: copy template base.ldif file
  template:
    backup: yes
    src: '{{ base_ldif_file }}.j2'
    dest: '{{ ldap_schema_folder }}/{{ base_ldif_file }}'
  tags:
    - openldap
  notify:
    - restart ldap service

- name: load base ldif into the ldapd database
  expect:
    command: ldapmodify -a -D cn={{ admin_root_user }},dc={{ root_domain }},dc={{ top_level_domain }} -W -f {{ ldap_schema_folder }}/{{ base_ldif_file }}
    responses:
      (?i)LDAP password: '{{ ldap_admin_password }}'
  tags:
    - openldap

- name: modify acl for vmailpanel on ldap
  ansible.builtin.shell: 
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ item }}
  with_items: '{{ acls_to_load }}'
  tags:
    - openldap

- name: create vmailpanel apache website folder
  copy:
    src: '{{ packages_dir }}/{{ mailadmin_directory_name }}'
    dest: '{{ apache2_root_folder }}'
    owner: '{{ apache2_system_user }}'
    group: '{{ apache2_system_user }}'
    remote_src: yes
    mode: '755'
  tags:
    - apache2

- name: modify permission of vmailpanel folder
  file:
    path: '{{ apache2_root_folder }}/{{ mailadmin_directory_name }}'
    mode: '755'
  tags:
    - apache2

- name: modify permission of vmailpanel public folder
  file:
    path: '{{ apache2_root_folder }}/{{ mailadmin_directory_name }}/{{ mailadmin_public_folder }}'
    mode: '755'
  tags:
    - apache2

- name: copy template config.inc.php file
  template:
    backup: yes
    src: '{{ vmailpanel_config_inc_file }}.j2'
    dest: '{{ apache2_root_folder }}/{{ mailadmin_directory_name }}/{{ vmailpanel_config_inc_file }}'
  tags:
    - apache2

- name: open firewall ports for mailadmin
  ufw:
    default: reject
    log: yes
    proto: '{{ item.protocol }}'
    rule: '{{ item.rule }}'
    state: enabled
    to_port: '{{ item.port }}'
  with_items: '{{ target_ufw_config }}'
  tags:
    - firewall

- name: create vmail home directory
  file:
    path: '{{ vmail_home_directory }}'
    state: directory
  tags:
    - openldap
    

- name: copy cleaner template file
  template:
    backup: yes
    src: '{{ cleaner_script_file }}.j2'
    dest: '{{ vmail_home_directory }}/{{ cleaner_script_file }}'
  tags:
    - openldap

- name: create cron job for cleaner Job execution
  cron:
    name: "cleaner job"
    minute: "{{ cleaner_job_minute }}"
    job: "{{ cleaner_job_command }}"
  tags: 
    - cron
  notify: Restart cron service

- name: add alias for mailadmin url in default http site
  lineinfile:
    backup: yes
    firstmatch: yes
    regexp: '{{ apache2_alias_regexp_line }}' 
    insertafter: '{{ apache2_conf_document_root_line }}'
    line: '{{ apache2_alias_line_mailadmin }}'
    path: '{{ apache2_site_available }}/{{ apache2_default_http_config_file }}'
  notify:
    - restart apache2 service
  tags:
    - apache2

- name: add alias for mailadmin url in default https site
  lineinfile:
    backup: yes
    firstmatch: yes
    regexp: '{{ apache2_alias_regexp_line }}' 
    insertafter: '{{ apache2_conf_document_root_line }}'
    line: '{{ apache2_alias_line_mailadmin_ssl }}'
    path: '{{ apache2_site_available }}/{{ apache2_default_https_config_file }}'
  notify:
    - restart apache2 service
  tags:
    - apache2