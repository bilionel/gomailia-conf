---  
  

#- name: create postfix database
#  shell:
#    argv:
#      - mysql
#      - -h {{ database_host }}
#      - -u {{ database_root_user }}
#      - < postfixdb.sql
#  environment:
#    MYSQL_PWD: '{{ database_root_password }}'

#- name: configure mysql login
#  ansible.builtin.expect:
#    command: mysql_config_editor set --login-path={{ database_login_path }} --user={{ database_root_user }} --password
#    responses:
#      (?i)password: '{{ database_root_password }}'
#  no_log: true

- name: put www-data as owner of /var/www folder for apache2
  file:
    path: /var/www
    recurse: yes
    group: '{{ apache2_system_user }}'
    owner: '{{ apache2_system_user }}'
  notify:
    - restart apache2 service

#- name: create postfixadmin apache website folder
#  copy:
#    src: '{{ packages_dir }}/{{ postfixadmin_directory_name }}'
#    dest: '{{ apache2_root_folder }}'
#    owner: '{{ apache2_system_user }}'
#    group: '{{ apache2_system_user }}'
#    remote_src: yes
#    mode: '755'
#  tags:
#    - postfixadmin

#- name: modify permission of postfixadmin folder
#  file:
#    path: '{{ apache2_root_folder }}/{{ postfixadmin_directory_name }}'
#    mode: '755'
#  tags:
#    - postfixadmin

#- name: modify permission of postfixadmin public folder
#  file:
#    path: '{{ apache2_root_folder }}/{{ postfixadmin_directory_name }}/{{ postfix_public_dir }}'
#    mode: '755'
#  tags:
#    - postfixadmin

#- name: create templates_c directory for postfixadmin
#  file:
#    path: '{{ apache2_root_folder }}/{{ postfixadmin_directory_name }}/{{ template_c_dir }}'
#    mode: '755'
#    group: '{{ apache2_system_user }}'
#    owner: '{{ apache2_system_user }}'
#    state: directory
- name: configure default parameters for ldap DIT
  ansible.builtin.debconf:
    name: '{{ item.name }}'
    question: '{{ item.question }}'
    value: '{{ item.value }}'
    vtype: '{{ item.vtype }}'
  with_items:
    - {name: 'slapd' , question: 'slapd/no_configuration', value: '{{ ldap_no_configuration }}', vtype: boolean }
    - {name: 'slapd' , question: 'slapd/domain', value: '{{ ldap_root_domain }}', vtype: string }
    - {name: 'slapd' , question: 'shared/organization', value: '{{ ldap_organization }}', vtype: string }
    - {name: 'slapd' , question: 'slapd/purge_database', value: '{{ ldap_purge_database }}', vtype: boolean }
    - {name: 'slapd' , question: 'slapd/move_old_database', value: '{{ ldap_move_old_database }}', vtype: boolean }
  tags:
    - openldap

- name: configure passwords for ldap admin
  ansible.builtin.debconf:
    name: '{{ item.name }}'
    question: '{{ item.question }}'
    value: '{{ item.value }}'
    vtype: '{{ item.vtype }}'
  with_items:
    - {name: 'slapd' , question: 'slapd/internal/adminpw', value: '{{ ldap_admin_password }}', vtype: password }
    - {name: 'slapd' , question: 'slapd/password1', value: '{{ ldap_admin_password }}', vtype: password }
    - {name: 'slapd' , question: 'slapd/password2', value: '{{ ldap_admin_password }}', vtype: password }
  no_log: true
  tags:
    - openldap

- name: reconfigure slapd package
  ansible.builtin.shell: 
    cmd: dpkg-reconfigure slapd -fnoninteractive
  tags:
    - openldap

- name: copy schemas of vmailbox to ldap server
  copy:
    remote_src: yes
    src: '{{ vmailpanel_schema_folder }}'
    dest: '{{ ldap_schema_folder }}'
  tags:
   - openldap

- name: add schemas to openldapd
  ansible.builtin.shell: 
    cmd: ldapadd -Y EXTERNAL -H ldapi:/// -f {{ item }}
  with_items: '{{ schemas_to_load }}'
  tags:
    - openldap

- name: create hash password for vmail directory account
  expect:
    command: slappasswd -h {MD5}
    responses:
      (?i)New password: '{{ vmail_account_password }}'
      (?i)enter new password: '{{ vmail_account_password }}'
  no_log: true
  tags:
    - openladap
    - current
  register: vmail_account_hash_password

- name: print variable
  debug:
    var: vmail_account_hash_password
  tags:
    - openldap
    - current

- name: copy template base.ldif file
  template:
    backup: yes
    src: '{{ base_ldif_file }}.j2'
    dest: '{{ ldap_schema_folder }}/{{ base_ldif_file }}'
  tags:
    - openldap
    - current
- name: load base ldif into the ldapd database
  expect:
    command: ldapmodify -a -D cn={{ admin_root_user }},dc={{ root_domain }},dc={{ top_level_domain }} -W -f {{ ldap_schema_folder }}/{{ base_ldif_file }}
    responses:
      (?i)LDAP password: '{{ ldap_admin_password }}'
  tags:
    - openldap

- name: modify acl for vmailpanel on ldap
  ansible.builtin.shell: 
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f {{ item }}
  with_items: '{{ acls_to_load }}'
  tags:
    - openldap
    - current_tasks

#- name: add alias for postfix admin website url
#  lineinfile:
#    backup: yes
#    firstmatch: yes
#    regexp: '{{ apache2_alias_regexp_line }}' 
#    insertafter: '{{ apache2_conf_document_root_line }}'
#    line: '{{ apache2_alias_line_postfixadmin }}'
#    path: '{{ apache2_site_available }}/{{ apache2_default_http_config_file }}'
#  notify:
#    - restart apache2 service
#  tags:
#    - postfixadmin